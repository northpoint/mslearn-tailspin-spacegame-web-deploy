# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-18.04'
  demands:
    - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.300'
  #docker login -u beeadmin -p FS03Dbp7ZhUQLDsk+gM2IvWPbtlxymBV 
  dockerRegistryServiceConnectionName : 'pslabs.azurecr.io' #'beekeepertest.azurecr.io'
  imageName : 'beekeeper-test'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests'
  inputs:
    command: test
    arguments: '--no-build --configuration $(buildConfiguration)'
    publishTestResults: true
    projects: '**/*.Test.csproj'

# - task: DotNetCoreCLI@2
#   displayName: 'Publish the project - $(buildConfiguration)'
#   inputs:
#     command: 'publish'
#     projects: '**/*.csproj'
#     publishWebProjects: false
#     arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
#     zipAfterPublish: true

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Artifact: drop'
#   condition: succeeded()

# - task: Docker@2
#   displayName: Build and push image
#   inputs:
#     command: buildAndPush
#     containerRegistry: $(dockerRegistryServiceConnectionName) #replace with name of your Docker registry service connection
#     repository: $(imageName)
#     tags: dev
#     dockerfile: Tailspin.SpaceGame.Web/Dockerfile

- task: DockerCompose@0
  displayName: Build services 
  inputs:
    action: Build services
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Azure Subscription'
    azureContainerRegistry: '{"loginServer":"beekeepertest.azurecr.io", "id" : "/subscriptions/a93ec613-3dfb-40c9-969d-a088bd211881/resourceGroups/USEPOMSOMSRSG2G/providers/Microsoft.ContainerRegistry/registries/beekeepertest"}'
    dockerComposeFile: '**/docker-compose.yml'
    dockerComposeCommand: rm
    projectName: $(Build.Repository.Name)
    additionalImageTags: $(Build.BuildId)
    qualifyImageNames: true

- task: DockerCompose@0
  displayName: Push image to container registry 
  inputs:
    action: Push services
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Azure Subscription'
    azureContainerRegistry: '{"loginServer":"beekeepertest.azurecr.io", "id" : "/subscriptions/a93ec613-3dfb-40c9-969d-a088bd211881/resourceGroups/USEPOMSOMSRSG2G/providers/Microsoft.ContainerRegistry/registries/beekeepertest"}'
    dockerComposeFile: '**/docker-compose.yml'
    projectName: $(Build.Repository.Name)
    qualifyImageNames: true
    dockerComposeCommand: rm
    additionalImageTags: $(Build.BuildId)
    includeSourceTags: true
    includeLatestTag: true

# pawel was here 
# - task: AzureRmWebAppDeployment@4
#   inputs:
#     ConnectionType: 'AzureRM'
#     azureSubscription: 'Azure Subscription'
#     appType: 'webAppContainer'
#     WebAppName: 'tailspingame-az-dev'
#     DockerNamespace: 'beekeepertest.azurecr.io'
#     DockerRepository: 'tailspinspacegameweb'
#     DockerImageTag: 'latest'

